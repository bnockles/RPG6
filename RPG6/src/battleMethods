package battle;

import java.util.ArrayList;

public class battleMethods{
	
	public static Unit Current(int[] turnList, ArrayList<Unit> Party){
	    int Max = 1000;
	    int Fastest = 0;
	    int Index = 0;
	    Unit Character = null;

	    int i;
	    while(Character==null){
	        i = 0;
	        while(i<turnList.length){
	        	turnList[i] +=  Party.get(i).speed;
	        	if(turnList[i] >= Max && turnList[i] > Fastest){
	        		Index = i;
	        		Fastest = turnList[i];
	        		Character = Party.get(i);
	    		}
	            i++;
	        }
	    }
	    turnList[Index] = 0;
	    return Character;
	}
	
	public static int expFormula(int lv){
		//returns the EXP needed to reach a level
		int exp = (int)(.1*(Math.pow(lv+1, 3.5)));
		return exp;
	}
	
	public static int nextLevel(Unit Character){
		//returns the difference between the EXP to reach the next level and the characters current EXP
		return expFormula(Character.level+1)-Character.exp;
	}
	
	public static void levelUp(Unit Character){
		//updates character statistics when reaching a new level
		while(Character.exp >= expFormula(Character.level)){
		Character.level++;
		Character.health = Character.health + (int)(Character.level*1.8);
		}
	}

	public static void addExp(Unit Character){
		//called after a battle, adds EXP received from battle to current EXP
		Character.exp += 500000;
		levelUp(Character);
	}
}
